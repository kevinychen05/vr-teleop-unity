# Simulation Setup and Usage Instructions

## Steps to Run the Simulation

1. Navigate to the Catkin workspace:
   cd ws_moveit/

2. Source the environment:
   source devel/setup.bash

3. Launch the simulation:
   roslaunch test_robot gazebo.launch

4. To run a Python script within the simulation environment:
   rosrun test_robot PYTHON_FILE.py

---

## Notes

1. The Python code uses an Anaconda environment for package management.  
   To activate it and install packages:
   conda activate ros
   pip install <package_name>

2. The first line of each Python file includes the path to the interpreter used by the Anaconda environment.  
   Do not modify this line unless you recreate the environment from scratch.

---

## Useful Commands and Files

### 1. Joint Controller GUI
To control the joints of the robotic arm, use:
rosrun rqt_joint_trajectory_controller rqt_joint_trajectory_controller

⚠️ Note: The robotic claws do NOT function properly with this tool. Avoid using it for claw control.

Steps to use the joint controller:
- A. Run the command above.
- B. In the `controller_manager_ns` dropdown, select `/controller_manager`.
- C. In the `controller` dropdown, select `panda_arm_controller`.
- D. You will see the robot arm joints listed below. You can interact with them to understand joint limits. (Assumed to be correct.)

---

### 2. Gazebo Environment File
The Gazebo world used for the simulation is located at:
  /home/user2/ws_moveit/src/test_robot/launch/Hp_test_uniwa_campus.world

You can modify this file to add objects like the bag or other environmental elements.

---

### 3. Robot Parameters
The URDF file defining the robot's parameters is located at:
  /home/user2/ws_moveit/src/test_robot/test_robot.urdf

No changes are currently necessary in this file.

